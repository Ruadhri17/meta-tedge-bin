#!/bin/sh
##################################################
# Parse mender artifact to name and version
#
# Example file contents:
# ```
# core-image-tedge-mender-raspberrypi4-64_20231203.1232
# ```
##################################################
set -e

NAME=
VERSION=

read_from_mender() {
    # Parse mender artifact to name and version
    # Example format: core-image-tedge-mender-raspberrypi4-64_20231203.1232
    CURRENT_ARTIFACT=$(sudo mender show-artifact 2>/dev/null ||:)

    if [ -z "$CURRENT_ARTIFACT" ]; then
        echo "mender show-artifact did not return a value" >&2
        exit 0
    fi

    NAME=$(echo "$CURRENT_ARTIFACT" | rev | cut -d_ -f2- | rev)
    VERSION=$(echo "$CURRENT_ARTIFACT" | rev | cut -d_ -f1 | rev)
}

read_from_yocto_build() {
    NAME=$(grep "IMAGE_BASENAME = " /etc/build | cut -d = -f2- | xargs)
    VERSION=$(grep "IMAGE_NAME = " /etc/build | cut -d = -f2- | rev | cut -d_ -f1 | rev | xargs)
    # Alternative version (using DATETIME)
    # VERSION=$(grep "DATETIME = " /etc/build | cut -d = -f2- | xargs)
}

if command -v mender >/dev/null 2>&1; then
    read_from_mender
elif [ -f /etc/build ]; then
    read_from_yocto_build
fi

if [ -z "$NAME" ] || [ -z "$VERSION" ]; then
    echo "could not detect firmware name or version. NAME=\"$NAME\", VERSION=\"$VERSION\"" >&2
    exit 0
fi

echo "name=\"$NAME\""
echo "version=\"$VERSION\""

# FIXME: Workaround since thin-edge.io does deduplication detection.
# However this is only needed because the firmware/name is cleared on tedge-agent startup.
# Remove once https://github.com/thin-edge/thin-edge.io/issues/2497 is resolved
echo "updated=\"$(date)\""
